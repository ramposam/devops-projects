# This yaml helps you to create airflow on azure kubernetes.
# Hopefully this works for any cloud which has kubernetes
# Created service for public/external ip of airflow web
# Incase if it's failing for first time try deployig again, fix the issue if any

# Kubernetes Secrets for Airflow
apiVersion: v1
kind: Secret
metadata:
  name: airflow-secret
  labels:
    app: airflow
type: Opaque
data:
  ADMIN_USERNAME: YWRtaW4=            # Base64-encoded value for "admin"
  ADMIN_PASSWORD: YWRtaW4=            # Base64-encoded value for "admin"
  ADMIN_EMAIL: YWRtaW5AZXhhbXBsZS5jb20= # Base64-encoded value for "admin@example.com"

# Airflow Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-deployment
  labels:
    app: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      containers:
        - name: airflow-webserver
          image: apache/airflow:2.6.3
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: airflow-secret # Ensure the secret exists in your cluster
          env:
            - name: AIRFLOW__LOGGING__REMOTE_LOGGING
              value: "True"
            - name: AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER
              value: "s3://rposam-devops-airflow/logs"
            - name: AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID
              value: "AirflowS3Connection"
            - name: AIRFLOW__CORE__DAGS_FOLDER
              value: "s3://rposam-devops-airflow/dags"
          command:
            - bash
            - -c
            - |
              airflow db init &&
              airflow users create \
                --username "$ADMIN_USERNAME" \
                --password "$ADMIN_PASSWORD" \
                --firstname Airflow \
                --lastname Admin \
                --role Admin \
                --email admin@example.com &&
              airflow scheduler &
              airflow webserver
          volumeMounts:
            - name: airflow-logs
              mountPath: /opt/airflow/logs
            - name: airflow-dags
              mountPath: /opt/airflow/dags
      volumes:
        - name: airflow-logs
          emptyDir: {} # Logs stored temporarily, change as per requirements
        - name: airflow-dags
          emptyDir: {} # DAGs stored temporarily, consider using PersistentVolume

---

# Airflow Webserver LoadBalancer Service
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
spec:
  type: LoadBalancer
  selector:
    app: airflow
  ports:
    - port: 8080
      targetPort: 8080
